version: '3'

services:
  web:
    image: "atomic_habits_drf:dev"
    build: .
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    env_file:
      - .env.prod
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    ports:
      - "6379:6379"

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - web

  celery_beat:
    build: .
    tty: true
    command: >
      sh -c "sleep 30 && celery -A config beat -l INFO -S django"
    depends_on:
      - db
      - redis
      - web

volumes:
  pg_data: